# -*- coding: utf-8 -*-
"""TopologicalSort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uWy62bz2_YQi1MEifmz5SAviR7UpHJ1q
"""

def topological_sort(graph):
    visited = set()
    stack = []

    def dfs(node):
        visited.add(node)
        for neighbor in graph.get(node, []):
            if neighbor not in visited:
                dfs(neighbor)
        stack.append(node)

    for node in graph:
        if node not in visited:
            dfs(node)

    return stack[::-1]

graph = {
    'A': ['B', 'C'],
    'B': ['D', 'F'],
    'C': ['F'],
    'D': ['E'],
    'E': ['C', 'F'],
    'F': []
}

print(topological_sort(graph))